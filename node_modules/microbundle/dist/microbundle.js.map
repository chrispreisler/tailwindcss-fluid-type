{"version":3,"file":"microbundle.js","sources":["../src/index.js","../src/lib/flow-plugin.js"],"sourcesContent":["import 'acorn-jsx';\nimport fs from 'fs';\nimport { resolve, relative, dirname, basename, extname } from 'path';\nimport chalk from 'chalk';\nimport { map, series } from 'asyncro';\nimport promisify from 'es6-promisify';\nimport glob from 'glob';\nimport autoprefixer from 'autoprefixer';\nimport { rollup, watch } from 'rollup';\nimport nodent from 'rollup-plugin-nodent';\nimport commonjs from 'rollup-plugin-commonjs';\nimport nodeResolve from 'rollup-plugin-node-resolve';\nimport buble from 'rollup-plugin-buble';\nimport uglify from 'rollup-plugin-uglify';\nimport postcss from 'rollup-plugin-postcss';\nimport alias from 'rollup-plugin-strict-alias';\nimport gzipSize from 'gzip-size';\nimport prettyBytes from 'pretty-bytes';\nimport shebangPlugin from 'rollup-plugin-preserve-shebang';\nimport typescript from 'rollup-plugin-typescript2';\nimport flow from './lib/flow-plugin';\nimport camelCase from 'camelcase';\n\nconst readFile = promisify(fs.readFile);\nconst stat = promisify(fs.stat);\nconst isDir = name => stat(name).then( stats => stats.isDirectory() ).catch( () => false );\nconst isFile = name => stat(name).then( stats => stats.isFile() ).catch( () => false );\nconst removeScope = name => name.replace(/^@.*\\//, '');\nconst safeVariableName = name => camelCase(removeScope(name).toLowerCase().replace(/((^[^a-zA-Z]+)|[^\\w.-])|([^a-zA-Z0-9]+$)/g, ''));\n\nconst WATCH_OPTS = {\n\texclude: 'node_modules/**'\n};\n\nexport default async function microbundle(options) {\n\tlet cwd = options.cwd = resolve(process.cwd(), options.cwd),\n\t\thasPackageJson = true;\n\n\ttry {\n\t\toptions.pkg = JSON.parse(await readFile(resolve(cwd, 'package.json'), 'utf8'));\n\t}\n\tcatch (err) {\n\t\tprocess.stderr.write(chalk.yellow(`${chalk.yellow.inverse('WARN')} no package.json found. Assuming a name of \"${basename(options.cwd)}\".`)+'\\n');\n\t\tlet msg = String(err.message || err);\n\t\tif (!msg.match(/ENOENT/)) console.warn(`  ${chalk.red.dim(msg)}`);\n\t\toptions.pkg = {};\n\t\thasPackageJson = false;\n\t}\n\n\tif (!options.pkg.name) {\n\t\toptions.pkg.name = basename(options.cwd);\n\t\tif (hasPackageJson) {\n\t\t\tprocess.stderr.write(chalk.yellow(`${chalk.yellow.inverse('WARN')} missing package.json \"name\" field. Assuming \"${options.pkg.name}\".`)+'\\n');\n\t\t}\n\t}\n\n\tconst jsOrTs = async filename => resolve(cwd, `${filename}${await isFile(resolve(cwd, filename+'.ts')) ? '.ts' : '.js'}`);\n\n\toptions.input = [];\n\t[].concat(\n\t\toptions.entries && options.entries.length ? options.entries : options.pkg.source || (await isDir(resolve(cwd, 'src')) && await jsOrTs('src/index')) || await jsOrTs('index') || options.pkg.module\n\t).map( file => glob.sync(resolve(cwd, file)) ).forEach( file => options.input.push(...file) );\n\n\tlet main = resolve(cwd, options.output || options.pkg.main || 'dist');\n\tif (!main.match(/\\.[a-z]+$/) || await isDir(main)) {\n\t\tmain = resolve(main, `${removeScope(options.pkg.name)}.js`);\n\t}\n\toptions.output = main;\n\n\tlet entries = (await map([].concat(options.input), async file => {\n\t\tfile = resolve(cwd, file);\n\t\tif (await isDir(file)) {\n\t\t\tfile = resolve(file, 'index.js');\n\t\t}\n\t\treturn file;\n\t})).filter( (item, i, arr) => arr.indexOf(item)===i );\n\n\toptions.entries = entries;\n\n\toptions.multipleEntries = entries.length>1;\n\n\tlet formats = (options.format || options.formats).split(',');\n\t// always compile cjs first if it's there:\n\tformats.sort( (a, b) => a==='cjs' ? -1 : a>b ? 1 : 0);\n\n\tlet steps = [];\n\tfor (let i=0; i<entries.length; i++) {\n\t\tfor (let j=0; j<formats.length; j++) {\n\t\t\tsteps.push(createConfig(options, entries[i], formats[j], i===0 && j===0));\n\t\t}\n\t}\n\n\tasync function getSizeInfo(code, filename) {\n\t\tlet size = await gzipSize(code);\n\t\tlet prettySize = prettyBytes(size);\n\t\tlet color = size < 5000 ? 'green' : size > 40000 ? 'red' : 'yellow';\n\t\treturn `${' '.repeat(10-prettySize.length)}${chalk[color](prettySize)}: ${chalk.white(basename(filename))}`;\n\t}\n\n\tif (options.watch) {\n\t\tconst onBuild = options.onBuild;\n\t\treturn new Promise( (resolve, reject) => {\n\t\t\tprocess.stdout.write(chalk.blue(`Watching source, compiling to ${relative(cwd, dirname(options.output))}:\\n`));\n\t\t\tsteps.map( options => {\n\t\t\t\twatch(Object.assign({\n\t\t\t\t\toutput: options.outputOptions,\n\t\t\t\t\twatch: WATCH_OPTS\n\t\t\t\t}, options.inputOptions)).on('event', e => {\n\t\t\t\t\tif (e.code==='ERROR' || e.code==='FATAL') {\n\t\t\t\t\t\treturn reject(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (e.code==='END') {\n\t\t\t\t\t\tgetSizeInfo(options._code, options.outputOptions.file).then( text => {\n\t\t\t\t\t\t\tprocess.stdout.write(`Wrote ${text.trim()}\\n`);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (typeof onBuild=='function') {\n\t\t\t\t\t\t\tonBuild(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tlet cache;\n\tlet out = await series(steps.map( ({ inputOptions, outputOptions }) => async () => {\n\t\tinputOptions.cache = cache;\n\t\tlet bundle = await rollup(inputOptions);\n\t\tcache = bundle;\n\t\tawait bundle.write(outputOptions);\n\t\treturn await getSizeInfo(bundle._code, outputOptions.file);\n\t}));\n\n\treturn chalk.blue(`Build output to ${relative(cwd, dirname(options.output)) || '.'}:`) + '\\n   ' + out.join('\\n   ');\n}\n\n\nfunction createConfig(options, entry, format, writeMeta) {\n\tlet { pkg } = options;\n\n\tlet external = ['dns', 'fs', 'path', 'url'].concat(\n\t\tObject.keys(pkg.peerDependencies || {}),\n\t\toptions.entries.filter( e => e!==entry )\n\t);\n\n\tlet aliases = {};\n\t// since we transform src/index.js, we need to rename imports for it:\n\tif (options.multipleEntries) {\n\t\taliases['.'] = './' + basename(options.output);\n\t\texternal.push('.');\n\t}\n\n\tlet useNodeResolve = true;\n\tif (options.inline === 'all') {\n\t\tuseNodeResolve = true;\n\t}\n\telse if (options.external==='all' || options.inline==='none') {\n\t\tuseNodeResolve = false;\n\t\texternal = external.concat(Object.keys(pkg.dependencies || {}));\n\t}\n\n\tlet globals = external.reduce( (globals, name) => {\n\t\t// valid JS identifiers are usually library globals:\n\t\tif (name.match(/^[a-z_$][a-z0-9_$]*$/)) {\n\t\t\tglobals[name] = name;\n\t\t}\n\t\treturn globals;\n\t}, {});\n\n\tfunction replaceName(filename, name) {\n\t\treturn resolve(dirname(filename), name + basename(filename).replace(/^[^.]+/, ''));\n\t}\n\n\tlet mainNoExtension = options.output;\n\tif (options.multipleEntries) {\n\t\tlet name = entry.match(/(\\\\|\\/)index(\\.(umd|cjs|es|m))?\\.js$/) ? mainNoExtension : entry;\n\t\tmainNoExtension = resolve(dirname(mainNoExtension), basename(name));\n\t}\n\tmainNoExtension = mainNoExtension.replace(/(\\.(umd|cjs|es|m))?\\.js$/, '');\n\n\tlet moduleMain = replaceName(pkg.module && !pkg.module.match(/src\\//) ? pkg.module : pkg['jsnext:main'] || 'x.m.js', mainNoExtension);\n\tlet cjsMain = replaceName(pkg['cjs:main'] || 'x.js', mainNoExtension);\n\tlet umdMain = replaceName(pkg['umd:main'] || 'x.umd.js', mainNoExtension);\n\n\t// let rollupName = safeVariableName(basename(entry).replace(/\\.js$/, ''));\n\n\tlet nameCache = {};\n\tlet mangleOptions = options.pkg.mangle || false;\n\n\tlet exportType;\n\tif (format!='es') {\n\t\ttry {\n\t\t\tlet file = fs.readFileSync(entry, 'utf-8');\n\t\t\tlet hasDefault = /\\bexport\\s*default\\s*[a-zA-Z_$]/.test(file);\n\t\t\tlet hasNamed = /\\bexport\\s*(let|const|var|async|function\\*?)\\s*[a-zA-Z_$*]/.test(file) || /^\\s*export\\s*\\{/m.test(file);\n\t\t\tif (hasDefault && hasNamed) exportType = 'default';\n\t\t}\n\t\tcatch (e) {}\n\t}\n\n\tconst useTypescript = extname(entry)==='.ts';\n\n\tlet config = {\n\t\tinputOptions: {\n\t\t\tinput: exportType ? resolve(__dirname, '../src/lib/__entry__.js') : entry,\n\t\t\texternal,\n\t\t\tplugins: [].concat(\n\t\t\t\talias({\n\t\t\t\t\t__microbundle_entry__: entry\n\t\t\t\t}),\n\t\t\t\tpostcss({\n\t\t\t\t\tplugins: [\n\t\t\t\t\t\tautoprefixer()\n\t\t\t\t\t],\n\t\t\t\t\t// only write out CSS for the first bundle (avoids pointless extra files):\n\t\t\t\t\tinject: false,\n\t\t\t\t\textract: !!writeMeta\n\t\t\t\t}),\n\t\t\t\tuseTypescript && typescript({\n\t\t\t\t\ttypescript: require('typescript'),\n\t\t\t\t\ttsconfigDefaults: { compilerOptions: { declaration: true } }\n\t\t\t\t}),\n\t\t\t\t!useTypescript && flow({ all: true, pretty: true }),\n\t\t\t\tnodent({\n\t\t\t\t\texclude: 'node_modules/**',\n\t\t\t\t\tnoRuntime: true,\n\t\t\t\t\tpromises: true,\n\t\t\t\t\ttransformations: {\n\t\t\t\t\t\tforOf: false\n\t\t\t\t\t},\n\t\t\t\t\tparser: {\n\t\t\t\t\t\tplugins: {\n\t\t\t\t\t\t\tjsx: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t!useTypescript && buble({\n\t\t\t\t\texclude: 'node_modules/**',\n\t\t\t\t\tjsx: options.jsx || 'h',\n\t\t\t\t\tobjectAssign: options.assign || 'Object.assign',\n\t\t\t\t\ttransforms: {\n\t\t\t\t\t\tdangerousForOf: true,\n\t\t\t\t\t\tdangerousTaggedTemplateString: true\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tuseNodeResolve && commonjs({\n\t\t\t\t\tinclude: 'node_modules/**'\n\t\t\t\t}),\n\t\t\t\tuseNodeResolve && nodeResolve({\n\t\t\t\t\tmodule: true,\n\t\t\t\t\tjsnext: true,\n\t\t\t\t\tbrowser: options.target!=='node'\n\t\t\t\t}),\n\t\t\t\t// We should upstream this to rollup\n\t\t\t\t// format==='cjs' && replace({\n\t\t\t\t// \t[`module.exports = ${rollupName};`]: '',\n\t\t\t\t// \t[`var ${rollupName} =`]: 'module.exports ='\n\t\t\t\t// }),\n\t\t\t\t// This works for the general case, but could cause nasty scope bugs.\n\t\t\t\t// format==='umd' && replace({\n\t\t\t\t// \t[`return ${rollupName};`]: '',\n\t\t\t\t// \t[`var ${rollupName} =`]: 'return'\n\t\t\t\t// }),\n\t\t\t\t// format==='es' && replace({\n\t\t\t\t// \t[`export default ${rollupName};`]: '',\n\t\t\t\t// \t[`var ${rollupName} =`]: 'export default'\n\t\t\t\t// }),\n\t\t\t\toptions.compress!==false && [\n\t\t\t\t\tuglify({\n\t\t\t\t\t\toutput: { comments: false },\n\t\t\t\t\t\tcompress: {\n\t\t\t\t\t\t\tkeep_infinity: true,\n\t\t\t\t\t\t\tpure_getters: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\twarnings: true,\n\t\t\t\t\t\tecma: 5,\n\t\t\t\t\t\ttoplevel: format==='cjs' || format==='es',\n\t\t\t\t\t\tmangle: {\n\t\t\t\t\t\t\tproperties: mangleOptions ? {\n\t\t\t\t\t\t\t\tregex: mangleOptions.regex ? new RegExp(mangleOptions.regex) : null,\n\t\t\t\t\t\t\t\treserved: mangleOptions.reserved || []\n\t\t\t\t\t\t\t} : false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnameCache\n\t\t\t\t\t}),\n\t\t\t\t\tmangleOptions && {\n\t\t\t\t\t\t// before hook\n\t\t\t\t\t\toptions() {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tnameCache = JSON.parse(fs.readFileSync(resolve(options.cwd, 'mangle.json'), 'utf8'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (e) {}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// after hook\n\t\t\t\t\t\tonwrite() {\n\t\t\t\t\t\t\tif (writeMeta && nameCache) {\n\t\t\t\t\t\t\t\tfs.writeFile(resolve(options.cwd, 'mangle.json'), JSON.stringify(nameCache, null, 2), Object);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t{ ongenerate({ bundle }, { code }) {\n\t\t\t\t\tconfig._code = bundle._code = code;\n\t\t\t\t} },\n\t\t\t\tshebangPlugin()\n\t\t\t).filter(Boolean)\n\t\t},\n\n\t\toutputOptions: {\n\t\t\texports: exportType ? 'default' : undefined,\n\t\t\tpaths: aliases,\n\t\t\tglobals,\n\t\t\tstrict: options.strict===true,\n\t\t\tlegacy: true,\n\t\t\tfreeze: false,\n\t\t\tsourcemap: options.sourcemap!==false,\n\t\t\ttreeshake: {\n\t\t\t\tpropertyReadSideEffects: false\n\t\t\t},\n\t\t\tformat,\n\t\t\tname: options.name || pkg.amdName || safeVariableName(pkg.name),\n\t\t\tfile: resolve(options.cwd, (format==='es' && moduleMain) || (format==='umd' && umdMain) || cjsMain)\n\t\t}\n\t};\n\n\treturn config;\n}\n","import flow from 'rollup-plugin-flow';\n\nexport default function fixedFlow(options) {\n\tlet plugin = flow(options);\n\treturn Object.assign({}, plugin, {\n\t\ttransform(code, id) {\n\t\t\tlet ret = plugin.transform(code, id);\n\t\t\tif (ret && ret.code===code) return null;\n\t\t\treturn ret;\n\t\t}\n\t});\n}\n"],"names":["const","readFile","promisify","fs","stat","isDir","name","then","stats","isDirectory","catch","isFile","removeScope","replace","safeVariableName","camelCase","toLowerCase","WATCH_OPTS","exclude","createConfig","options","entry","format","writeMeta","pkg","external","concat","Object","keys","peerDependencies","entries","filter","e","aliases","multipleEntries","basename","output","push","let","useNodeResolve","inline","dependencies","globals","reduce","match","replaceName","filename","resolve","dirname","mainNoExtension","exportType","moduleMain","module","cjsMain","umdMain","nameCache","mangleOptions","mangle","file","readFileSync","hasDefault","test","hasNamed","useTypescript","extname","config","inputOptions","input","__dirname","plugins","alias","__microbundle_entry__","postcss","autoprefixer","inject","extract","typescript","require","tsconfigDefaults","compilerOptions","declaration","plugin","flow","assign","transform","code","id","ret","all","pretty","nodent","noRuntime","promises","transformations","forOf","parser","jsx","buble","objectAssign","transforms","dangerousForOf","dangerousTaggedTemplateString","commonjs","include","nodeResolve","jsnext","browser","target","compress","uglify","comments","keep_infinity","pure_getters","warnings","ecma","toplevel","properties","regex","RegExp","reserved","JSON","parse","cwd","onwrite","writeFile","stringify","ongenerate","ref","ref$1","_code","shebangPlugin","Boolean","outputOptions","exports","undefined","paths","strict","legacy","freeze","sourcemap","treeshake","propertyReadSideEffects","amdName","getSizeInfo","gzipSize","prettySize","prettyBytes","size","$await_13","color","repeat","length","chalk","white","process","hasPackageJson","stderr","write","yellow","inverse","jsOrTs","$await_14","source","$await_15","$await_16","$await_17","$await_18","$await_19","$await_20","$await_21","map","glob","sync","forEach","main","$await_22","$await_23","$await_24","$await_25","item","i","arr","indexOf","formats","split","sort","a","b","steps","j","watch","onBuild","Promise","reject","stdout","blue","relative","on","text","trim","series","cache","rollup","bundle","$await_26","out","$await_29","join","err","msg","String","message","console","warn","red","dim","$await_30"],"mappings":"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"}