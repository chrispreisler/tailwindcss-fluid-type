{"version":3,"file":"cli.js","sources":["../src/cli.js"],"sourcesContent":["#!/usr/bin/env node\n\nimport sade from 'sade';\nimport microbundle from '.';\n\nlet { version } = require('../package');\nlet prog = sade('microbundle');\n\nlet toArray = val => Array.isArray(val) ? val : val == null ? [] : [val];\n\nprog\n\t.version(version)\n\t.option('--entry, -i', 'Entry module(s)')\n\t.option('--output, -o', 'Directory to place build files into')\n\t.option('--format, -f', 'Only build specified formats', 'es,cjs,umd')\n\t.option('--target', 'Specify your target environment', 'node')\n\t.option('--external', `Specify external dependencies, or 'all'`)\n\t.option('--compress', 'Compress output using UglifyJS', true)\n\t.option('--strict', 'Enforce undefined global context and add \"use strict\"')\n\t.option('--name', 'Specify name exposed in UMD builds')\n\t.option('--cwd', 'Use an alternative working directory', '.')\n\t.option('--sourcemap', 'Generate source map', true);\n\nprog\n\t.command('build [...entries]', '', { default: true })\n\t.describe('Build once and exit')\n\t.action(run);\n\nprog\n\t.command('watch [...entries]')\n\t.describe('Rebuilds on any change')\n\t.action((str, opts) => run(str, opts, true));\n\n// Parse argv; add extra aliases\nprog.parse(process.argv, {\n\talias: {\n\t\to: ['output', 'd'],\n\t\ti: ['entry', 'entries', 'e']\n\t}\n});\n\nfunction run(str, opts, isWatch) {\n\topts.watch = !!isWatch;\n\topts.entries = toArray(str || opts.entry).concat(opts._);\n\tmicrobundle(opts)\n\t\t.then( output => {\n\t\t\tif (output!=null) process.stdout.write(output + '\\n');\n\t\t\tif (!opts.watch) process.exit(0);\n\t\t})\n\t\t.catch(err => {\n\t\t\tprocess.stderr.write(String(err) + '\\n');\n\t\t\tprocess.exit(err.code || 1);\n\t\t});\n}\n"],"names":["version","require","prog","sade","toArray","val","Array","isArray","run","str","opts","isWatch","watch","entries","entry","concat","_","microbundle","then","output","process","stdout","write","exit","catch","err","stderr","String","code","option","command","default","describe","action","parse","argv","alias","o","i"],"mappings":";gIAKMA,EAAYC,QAAQ,sBACtBC,EAAOC,EAAK,eAEZC,WAAUC,UAAOC,MAAMC,QAAQF,GAAOA,EAAa,MAAPA,MAAoBA,IAiCpE,SAASG,EAAIC,EAAKC,EAAMC,GACvBD,EAAKE,QAAUD,EACfD,EAAKG,QAAUT,EAAQK,GAAOC,EAAKI,OAAOC,OAAOL,EAAKM,GACtDC,EAAYP,GACVQ,cAAMC,GACM,MAARA,GAAcC,QAAQC,OAAOC,MAAMH,EAAS,MAC3CT,EAAKE,OAAOQ,QAAQG,KAAK,KAE9BC,eAAMC,GACNL,QAAQM,OAAOJ,MAAMK,OAAOF,GAAO,MACnCL,QAAQG,KAAKE,EAAIG,MAAQ,KAzC5B1B,EACEF,QAAQA,GACR6B,OAAO,cAAe,mBACtBA,OAAO,eAAgB,uCACvBA,OAAO,eAAgB,+BAAgC,cACvDA,OAAO,WAAY,kCAAmC,QACtDA,OAAO,aAAc,2CACrBA,OAAO,aAAc,kCAAkC,GACvDA,OAAO,WAAY,yDACnBA,OAAO,SAAU,sCACjBA,OAAO,QAAS,uCAAwC,KACxDA,OAAO,cAAe,uBAAuB,GAE/C3B,EACE4B,QAAQ,qBAAsB,IAAMC,SAAS,IAC7CC,SAAS,uBACTC,OAAOzB,GAETN,EACE4B,QAAQ,sBACRE,SAAS,0BACTC,gBAAQxB,EAAKC,UAASF,EAAIC,EAAKC,GAAM,KAGvCR,EAAKgC,MAAMd,QAAQe,MAClBC,OACCC,GAAI,SAAU,KACdC,GAAI,QAAS,UAAW"}